{
  "name": "kernel-release",
  "tagline": "Heart of OpenMandriva Linux operating system",
  "body": "### Hello OpenMandriva Linux Users!\r\nlinux-userspace-headers contains the headers for the source code of\r\nLinux kernel. All source code necessary to compile a new kernel is\r\nincluded in two packages linux-userspace-headers, and kernel-source.\r\nYou will need to install both linux-userspace-headers (needed for\r\ngeneral Linux compilation), and kernel-source in order to compile\r\na new kernel.\r\n\r\nThe kernel is the central process of your Linux machine, the mediator\r\nbetween the hardware and your programs. It is responsible for memory\r\nallocations, process managing, device access...\r\n\r\nAlthough modern kernels are very flexible thanks to dynamic modules, you\r\nmay need to compile your own kernel for various reasons: your found a\r\nnew module which need a more recent kernel, you need a feature of a new\r\nkernel, etc...\r\n\r\nHere is a short sum-up of what you can find in the Kernel-HOWTO. Consult\r\nit in case of a problem or if the shortcut here provided does not meet\r\nyour needs. You should also consult the README of kernel-sources.\r\n\r\n\r\n### Configure your new kernel\r\n\r\nYou should never build a kernel as root, so as a normal user:\r\nCopy the source in /usr/src/linux/ to ~/kernel/\r\nChange to ~/kernel/ and clean-up previous compilations, by issuing \r\n\"make mrproper\",\r\nIn console mode, run \"make menuconfig\",\r\nUnder X11, run \"make xconfig\".\r\n\r\nThen configure all sections of your kernel making each feature you need\r\navailable constantly or as a module. Note that you should compile most\r\nfeatures as a module, as it consume less memory, taking into account\r\nthat some of them cannot be modules as you may need them at boot time,\r\nbefore dynamic modules be loaded...\r\n\r\n### Compile it\r\n\r\nJust issue \"make\" to create a compressed kernel image and the modules you \r\nconfigured.\r\n\r\n### install your new kernel\r\nNow you need root privilegies, so:\r\nIssue \"su\" and enter root password.\r\nIssue \"make modules_install\"\r\n\r\nThis will copy your modules and needed files to /lib/modules/\r\n\r\nIssue \"make install\"\r\n\r\nThis will copy your new kernel and system.map to boot dir (/boot/) with\r\ncorrect names including version, and change respective links.\r\n\r\nIt finally runs lilo to take into account your new kernel.\r\n\r\n### Modify Lilo to allow your booting on old kernel\r\n* This step is optional, although recommended *\r\nSee lilo.conf man page.\r\nYour are encouraged during this step to create a new section in your\r\nlilo.conf file, in order to enable you to boot on your both kernels, the\r\nold and the new one.\r\nYou need to run lilo then to take your changes into account.\r\nYou may also use linuxconf to do all that with a nice GUI.\r\n\r\n### Support or Contact\r\nHaving trouble with kernel-release? [report bug](https://issues.openmandriva.org/) or [https://github.com/OpenMandrivaAssociation/kernel-release/issues].",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}